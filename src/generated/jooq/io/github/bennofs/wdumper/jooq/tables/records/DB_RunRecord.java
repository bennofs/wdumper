/*
 * This file is generated by jOOQ.
 */
package io.github.bennofs.wdumper.jooq.tables.records;


import io.github.bennofs.wdumper.jooq.tables.DB_Run;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DB_RunRecord extends UpdatableRecordImpl<DB_RunRecord> implements Record7<Integer, LocalDateTime, LocalDateTime, Integer, String, String, String> {

    private static final long serialVersionUID = 1501602552;

    /**
     * Setter for <code>run.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>run.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>run.started_at</code>.
     */
    public void setStartedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>run.started_at</code>.
     */
    public LocalDateTime getStartedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>run.finished_at</code>.
     */
    public void setFinishedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>run.finished_at</code>.
     */
    public LocalDateTime getFinishedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>run.count</code>.
     */
    public void setCount(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>run.count</code>.
     */
    public Integer getCount() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>run.tool_version</code>.
     */
    public void setToolVersion(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>run.tool_version</code>.
     */
    public String getToolVersion() {
        return (String) get(4);
    }

    /**
     * Setter for <code>run.wdtk_version</code>.
     */
    public void setWdtkVersion(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>run.wdtk_version</code>.
     */
    public String getWdtkVersion() {
        return (String) get(5);
    }

    /**
     * Setter for <code>run.dump_date</code>.
     */
    public void setDumpDate(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>run.dump_date</code>.
     */
    public String getDumpDate() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, LocalDateTime, LocalDateTime, Integer, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, LocalDateTime, LocalDateTime, Integer, String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return DB_Run.RUN.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return DB_Run.RUN.STARTED_AT;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return DB_Run.RUN.FINISHED_AT;
    }

    @Override
    public Field<Integer> field4() {
        return DB_Run.RUN.COUNT;
    }

    @Override
    public Field<String> field5() {
        return DB_Run.RUN.TOOL_VERSION;
    }

    @Override
    public Field<String> field6() {
        return DB_Run.RUN.WDTK_VERSION;
    }

    @Override
    public Field<String> field7() {
        return DB_Run.RUN.DUMP_DATE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getStartedAt();
    }

    @Override
    public LocalDateTime component3() {
        return getFinishedAt();
    }

    @Override
    public Integer component4() {
        return getCount();
    }

    @Override
    public String component5() {
        return getToolVersion();
    }

    @Override
    public String component6() {
        return getWdtkVersion();
    }

    @Override
    public String component7() {
        return getDumpDate();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getStartedAt();
    }

    @Override
    public LocalDateTime value3() {
        return getFinishedAt();
    }

    @Override
    public Integer value4() {
        return getCount();
    }

    @Override
    public String value5() {
        return getToolVersion();
    }

    @Override
    public String value6() {
        return getWdtkVersion();
    }

    @Override
    public String value7() {
        return getDumpDate();
    }

    @Override
    public DB_RunRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public DB_RunRecord value2(LocalDateTime value) {
        setStartedAt(value);
        return this;
    }

    @Override
    public DB_RunRecord value3(LocalDateTime value) {
        setFinishedAt(value);
        return this;
    }

    @Override
    public DB_RunRecord value4(Integer value) {
        setCount(value);
        return this;
    }

    @Override
    public DB_RunRecord value5(String value) {
        setToolVersion(value);
        return this;
    }

    @Override
    public DB_RunRecord value6(String value) {
        setWdtkVersion(value);
        return this;
    }

    @Override
    public DB_RunRecord value7(String value) {
        setDumpDate(value);
        return this;
    }

    @Override
    public DB_RunRecord values(Integer value1, LocalDateTime value2, LocalDateTime value3, Integer value4, String value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DB_RunRecord
     */
    public DB_RunRecord() {
        super(DB_Run.RUN);
    }

    /**
     * Create a detached, initialised DB_RunRecord
     */
    public DB_RunRecord(Integer id, LocalDateTime startedAt, LocalDateTime finishedAt, Integer count, String toolVersion, String wdtkVersion, String dumpDate) {
        super(DB_Run.RUN);

        set(0, id);
        set(1, startedAt);
        set(2, finishedAt);
        set(3, count);
        set(4, toolVersion);
        set(5, wdtkVersion);
        set(6, dumpDate);
    }
}
