/*
 * This file is generated by jOOQ.
 */
package io.github.bennofs.wdumper.jooq;


import io.github.bennofs.wdumper.jooq.tables.DB_Databasechangeloglock;
import io.github.bennofs.wdumper.jooq.tables.DB_Dump;
import io.github.bennofs.wdumper.jooq.tables.DB_DumpError;
import io.github.bennofs.wdumper.jooq.tables.DB_Run;
import io.github.bennofs.wdumper.jooq.tables.DB_Zenodo;
import io.github.bennofs.wdumper.jooq.tables.records.DB_DatabasechangeloglockRecord;
import io.github.bennofs.wdumper.jooq.tables.records.DB_DumpErrorRecord;
import io.github.bennofs.wdumper.jooq.tables.records.DB_DumpRecord;
import io.github.bennofs.wdumper.jooq.tables.records.DB_RunRecord;
import io.github.bennofs.wdumper.jooq.tables.records.DB_ZenodoRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of
 * the <code></code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<DB_DumpRecord, Integer> IDENTITY_DUMP = Identities0.IDENTITY_DUMP;
    public static final Identity<DB_DumpErrorRecord, Integer> IDENTITY_DUMP_ERROR = Identities0.IDENTITY_DUMP_ERROR;
    public static final Identity<DB_RunRecord, Integer> IDENTITY_RUN = Identities0.IDENTITY_RUN;
    public static final Identity<DB_ZenodoRecord, Integer> IDENTITY_ZENODO = Identities0.IDENTITY_ZENODO;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DB_DatabasechangeloglockRecord> KEY_DATABASECHANGELOGLOCK_PRIMARY = UniqueKeys0.KEY_DATABASECHANGELOGLOCK_PRIMARY;
    public static final UniqueKey<DB_DumpRecord> KEY_DUMP_PRIMARY = UniqueKeys0.KEY_DUMP_PRIMARY;
    public static final UniqueKey<DB_DumpErrorRecord> KEY_DUMP_ERROR_PRIMARY = UniqueKeys0.KEY_DUMP_ERROR_PRIMARY;
    public static final UniqueKey<DB_RunRecord> KEY_RUN_PRIMARY = UniqueKeys0.KEY_RUN_PRIMARY;
    public static final UniqueKey<DB_ZenodoRecord> KEY_ZENODO_PRIMARY = UniqueKeys0.KEY_ZENODO_PRIMARY;
    public static final UniqueKey<DB_ZenodoRecord> KEY_ZENODO_DUMP_ID = UniqueKeys0.KEY_ZENODO_DUMP_ID;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<DB_DumpRecord, DB_RunRecord> FK_DUMP_RUN_ID_RUN = ForeignKeys0.FK_DUMP_RUN_ID_RUN;
    public static final ForeignKey<DB_DumpErrorRecord, DB_DumpRecord> FK_DUMP_ERROR_DUMP_ID_DUMP = ForeignKeys0.FK_DUMP_ERROR_DUMP_ID_DUMP;
    public static final ForeignKey<DB_DumpErrorRecord, DB_RunRecord> FK_DUMP_ERROR_RUN_ID_RUN = ForeignKeys0.FK_DUMP_ERROR_RUN_ID_RUN;
    public static final ForeignKey<DB_DumpErrorRecord, DB_ZenodoRecord> FK_DUMP_ERROR_ZENODO_ID_ZENODO = ForeignKeys0.FK_DUMP_ERROR_ZENODO_ID_ZENODO;
    public static final ForeignKey<DB_ZenodoRecord, DB_DumpRecord> FK_ZENODO_DUMP_ID_DUMP = ForeignKeys0.FK_ZENODO_DUMP_ID_DUMP;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<DB_DumpRecord, Integer> IDENTITY_DUMP = Internal.createIdentity(DB_Dump.DUMP, DB_Dump.DUMP.ID);
        public static Identity<DB_DumpErrorRecord, Integer> IDENTITY_DUMP_ERROR = Internal.createIdentity(DB_DumpError.DUMP_ERROR, DB_DumpError.DUMP_ERROR.ID);
        public static Identity<DB_RunRecord, Integer> IDENTITY_RUN = Internal.createIdentity(DB_Run.RUN, DB_Run.RUN.ID);
        public static Identity<DB_ZenodoRecord, Integer> IDENTITY_ZENODO = Internal.createIdentity(DB_Zenodo.ZENODO, DB_Zenodo.ZENODO.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<DB_DatabasechangeloglockRecord> KEY_DATABASECHANGELOGLOCK_PRIMARY = Internal.createUniqueKey(DB_Databasechangeloglock.DATABASECHANGELOGLOCK, "KEY_DATABASECHANGELOGLOCK_PRIMARY", new TableField[] { DB_Databasechangeloglock.DATABASECHANGELOGLOCK.ID }, true);
        public static final UniqueKey<DB_DumpRecord> KEY_DUMP_PRIMARY = Internal.createUniqueKey(DB_Dump.DUMP, "KEY_dump_PRIMARY", new TableField[] { DB_Dump.DUMP.ID }, true);
        public static final UniqueKey<DB_DumpErrorRecord> KEY_DUMP_ERROR_PRIMARY = Internal.createUniqueKey(DB_DumpError.DUMP_ERROR, "KEY_dump_error_PRIMARY", new TableField[] { DB_DumpError.DUMP_ERROR.ID }, true);
        public static final UniqueKey<DB_RunRecord> KEY_RUN_PRIMARY = Internal.createUniqueKey(DB_Run.RUN, "KEY_run_PRIMARY", new TableField[] { DB_Run.RUN.ID }, true);
        public static final UniqueKey<DB_ZenodoRecord> KEY_ZENODO_PRIMARY = Internal.createUniqueKey(DB_Zenodo.ZENODO, "KEY_zenodo_PRIMARY", new TableField[] { DB_Zenodo.ZENODO.ID }, true);
        public static final UniqueKey<DB_ZenodoRecord> KEY_ZENODO_DUMP_ID = Internal.createUniqueKey(DB_Zenodo.ZENODO, "KEY_zenodo_dump_id", new TableField[] { DB_Zenodo.ZENODO.DUMP_ID, DB_Zenodo.ZENODO.TARGET }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<DB_DumpRecord, DB_RunRecord> FK_DUMP_RUN_ID_RUN = Internal.createForeignKey(Keys.KEY_RUN_PRIMARY, DB_Dump.DUMP, "fk_dump_run_id_run", new TableField[] { DB_Dump.DUMP.RUN_ID }, true);
        public static final ForeignKey<DB_DumpErrorRecord, DB_DumpRecord> FK_DUMP_ERROR_DUMP_ID_DUMP = Internal.createForeignKey(Keys.KEY_DUMP_PRIMARY, DB_DumpError.DUMP_ERROR, "fk_dump_error_dump_id_dump", new TableField[] { DB_DumpError.DUMP_ERROR.DUMP_ID }, true);
        public static final ForeignKey<DB_DumpErrorRecord, DB_RunRecord> FK_DUMP_ERROR_RUN_ID_RUN = Internal.createForeignKey(Keys.KEY_RUN_PRIMARY, DB_DumpError.DUMP_ERROR, "fk_dump_error_run_id_run", new TableField[] { DB_DumpError.DUMP_ERROR.RUN_ID }, true);
        public static final ForeignKey<DB_DumpErrorRecord, DB_ZenodoRecord> FK_DUMP_ERROR_ZENODO_ID_ZENODO = Internal.createForeignKey(Keys.KEY_ZENODO_PRIMARY, DB_DumpError.DUMP_ERROR, "fk_dump_error_zenodo_id_zenodo", new TableField[] { DB_DumpError.DUMP_ERROR.ZENODO_ID }, true);
        public static final ForeignKey<DB_ZenodoRecord, DB_DumpRecord> FK_ZENODO_DUMP_ID_DUMP = Internal.createForeignKey(Keys.KEY_DUMP_PRIMARY, DB_Zenodo.ZENODO, "fk_zenodo_dump_id_dump", new TableField[] { DB_Zenodo.ZENODO.DUMP_ID }, true);
    }
}
